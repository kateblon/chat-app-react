{
  "_args": [
    [
      {
        "raw": "gcp-metadata@^4.2.0",
        "scope": null,
        "escapedName": "gcp-metadata",
        "name": "gcp-metadata",
        "rawSpec": "^4.2.0",
        "spec": ">=4.2.0 <5.0.0",
        "type": "range"
      },
      "C:\\Users\\bigun\\Desktop\\chat app\\node_modules\\google-auth-library"
    ]
  ],
  "_from": "gcp-metadata@^4.2.0",
  "_hasShrinkwrap": false,
  "_id": "gcp-metadata@4.2.1",
  "_location": "/gcp-metadata",
  "_nodeVersion": "12.18.4",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/gcp-metadata_4.2.1_1603987653997_0.9702629823488014"
  },
  "_npmUser": {
    "name": "google-wombot",
    "email": "node-team-npm+wombot@google.com"
  },
  "_npmVersion": "6.14.6",
  "_phantomChildren": {},
  "_requested": {
    "raw": "gcp-metadata@^4.2.0",
    "scope": null,
    "escapedName": "gcp-metadata",
    "name": "gcp-metadata",
    "rawSpec": "^4.2.0",
    "spec": ">=4.2.0 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/google-auth-library"
  ],
  "_resolved": "https://registry.npmjs.org/gcp-metadata/-/gcp-metadata-4.2.1.tgz",
  "_shasum": "31849fbcf9025ef34c2297c32a89a1e7e9f2cd62",
  "_shrinkwrap": null,
  "_spec": "gcp-metadata@^4.2.0",
  "_where": "C:\\Users\\bigun\\Desktop\\chat app\\node_modules\\google-auth-library",
  "author": {
    "name": "Stephen Sawchuk"
  },
  "bugs": {
    "url": "https://github.com/googleapis/gcp-metadata/issues"
  },
  "dependencies": {
    "gaxios": "^4.0.0",
    "json-bigint": "^1.0.0"
  },
  "description": "Get the metadata from a Google Cloud Platform environment",
  "devDependencies": {
    "@compodoc/compodoc": "^1.1.10",
    "@microsoft/api-documenter": "^7.8.10",
    "@microsoft/api-extractor": "^7.8.10",
    "@types/mocha": "^8.0.0",
    "@types/ncp": "^2.0.1",
    "@types/nock": "^10.0.3",
    "@types/node": "^12.7.2",
    "@types/tmp": "0.2.0",
    "@types/uuid": "^8.0.0",
    "c8": "^7.0.0",
    "codecov": "^3.5.0",
    "gcbuild": "^1.3.4",
    "gcx": "^1.0.0",
    "googleapis": "^61.0.0",
    "gts": "^3.0.0",
    "linkinator": "^2.0.0",
    "mocha": "^8.0.0",
    "ncp": "^2.0.0",
    "nock": "^13.0.0",
    "tmp": "^0.2.0",
    "typescript": "^3.8.3",
    "uuid": "^8.0.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-tSk+REe5iq/N+K+SK1XjZJUrFPuDqGZVzCy2vocIHIGmPlTGsa8owXMJwGkrXr73NO0AzhPW4MF2DEHz7P2AVw==",
    "shasum": "31849fbcf9025ef34c2297c32a89a1e7e9f2cd62",
    "tarball": "https://registry.npmjs.org/gcp-metadata/-/gcp-metadata-4.2.1.tgz",
    "fileCount": 7,
    "unpackedSize": 53230,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfmujGCRA9TVsSAnZWagAAtB8P/jeXDP8cHoxhANlwCRsb\nld8phaFwi04zWVwFkQ2SmvmAgrt2hNcDqD17ZotqBkzx95CanKTpyN4PX/Xp\nIjjYoLtJUgs+lLJweDbE41I1dOb3ugOWNdZI7ZvlUnq8Wh4oyGoFhZThGrDt\n9A1ZRLyEHEP5+qHaRSpzIlnh/v9T6RjRpPVj/GfzLlkNJURbYhlHR97MB3Nz\nEiN0aqtnvyPBJFgkuZg9qFU407jyrWhki3/jErnNotTPyfOgtQfWOmWp71Wl\nGQGyu1CSuMP40C4x75TUvjtx6j+dyI69NZ2TAqfc1zPwQfWWI/eJZajMoYlD\nbaNucTJCMUXXAUZTYq98nAE+UXK/tLGH7ItckX/9obETVM8S6/VcFsvwuWwh\nUk8SnnKC7/HIOwqialftnDtb4EW3nbLg7VxJL+z11OMN2FlGKqDkSMnimzgv\n7qLNW9AV5+IOAfF8EsRiwokyWPf9Ia07xq2S+jxtBz/g+Kg6VcZE5OpVY2df\nLqs+dVnPNC8mCZT4PKaJMC/HEAq0L8ufWXlHP7dLSp4prLM4gxVB9wq8THfq\nTK+IpJpzXg+31KUA7qqhrL1CfxUrbqWFinyiexyoZibvzEeF4ZCFyKfSldWP\nwGV1i+ck9XAJWW+tz0NwetmkkNdemy5yHtVUExj9mObgpuriSgoKjuU5TBEU\nOZCU\r\n=YDBB\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=10"
  },
  "files": [
    "build/src"
  ],
  "gitHead": "3a789bb907ecde79ba841fc44517ef185e8bf816",
  "homepage": "https://github.com/googleapis/gcp-metadata#readme",
  "keywords": [
    "google cloud platform",
    "google cloud",
    "google",
    "app engine",
    "compute engine",
    "metadata server",
    "metadata"
  ],
  "license": "Apache-2.0",
  "main": "./build/src/index.js",
  "maintainers": [
    {
      "name": "google-wombot",
      "email": "node-team-npm+wombot@google.com"
    },
    {
      "name": "stephenplusplus",
      "email": "stephenplusplusplus@gmail.com"
    },
    {
      "name": "google-cloud-admin",
      "email": "google-cloud@google.com"
    }
  ],
  "name": "gcp-metadata",
  "optionalDependencies": {},
  "readme": "# gcp-metadata\n> Get the metadata from a Google Cloud Platform environment.\n\n[![NPM Version][npm-image]][npm-url]\n[![codecov][codecov-image]][codecov-url]\n\n```sh\n$ npm install --save gcp-metadata\n```\n```js\nconst gcpMetadata = require('gcp-metadata');\n```\n\n#### Check to see if the metadata server is available\n```js\nconst isAvailable = await gcpMetadata.isAvailable();\n```\n\n#### Access all metadata\n```js\nconst data = await gcpMetadata.instance();\nconsole.log(data); // ... All metadata properties\n```\n\n#### Access specific properties\n```js\nconst data = await gcpMetadata.instance('hostname');\nconsole.log(data); // ...Instance hostname\nconst projectId = await gcpMetadata.project('project-id');\nconsole.log(projectId); // ...Project ID of the running instance\n```\n\n#### Access nested properties with the relative path\n```js\nconst data = await gcpMetadata.instance('service-accounts/default/email');\nconsole.log(data); // ...Email address of the Compute identity service account\n```\n\n#### Access specific properties with query parameters\n```js\nconst data = await gcpMetadata.instance({\n  property: 'tags',\n  params: { alt: 'text' }\n});\nconsole.log(data) // ...Tags as newline-delimited list\n```\n\n#### Access with custom headers\n```js\nawait gcpMetadata.instance({\n  headers: { 'no-trace': '1' }\n}); // ...Request is untraced\n```\n\n### Take care with large number valued properties\n\nIn some cases number valued properties returned by the Metadata Service may be\ntoo large to be representable as JavaScript numbers. In such cases we return\nthose values as `BigNumber` objects (from the [bignumber.js][] library). Numbers\nthat fit within the JavaScript number range will be returned as normal number\nvalues.\n\n```js\nconst id = await gcpMetadata.instance('id');\nconsole.log(id)  // ... BigNumber { s: 1, e: 18, c: [ 45200, 31799277581759 ] }\nconsole.log(id.toString()) // ... 4520031799277581759\n```\n\n[bignumber.js]: https://github.com/MikeMcl/bignumber.js\n[codecov-image]: https://codecov.io/gh/googleapis/gcp-metadata/branch/master/graph/badge.svg\n[codecov-url]: https://codecov.io/gh/googleapis/gcp-metadata\n[npm-image]: https://img.shields.io/npm/v/gcp-metadata.svg\n[npm-url]: https://www.npmjs.com/package/gcp-metadata\n\n### Environment variables\n\n* GCE_METADATA_HOST: provide an alternate host or IP to perform lookup against (useful, for example, you're connecting through a custom proxy server).\n\nFor example:\n```\nexport GCE_METADATA_HOST = '169.254.169.254'\n```\n\n* DETECT_GCP_RETRIES: number representing number of retries that should be attempted on metadata lookup.",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/googleapis/gcp-metadata.git"
  },
  "scripts": {
    "api-documenter": "api-documenter yaml --input-folder=temp",
    "api-extractor": "api-extractor run --local",
    "clean": "gts clean",
    "compile": "tsc -p .",
    "docs": "compodoc src/",
    "docs-test": "linkinator docs",
    "fix": "gts fix",
    "lint": "gts check",
    "precompile": "gts clean",
    "predocs-test": "npm run docs",
    "prelint": "cd samples; npm link ../; npm install",
    "prepare": "npm run compile",
    "presystem-test": "npm run compile",
    "pretest": "npm run compile",
    "samples-test": "npm link && cd samples/ && npm link ../ && npm test && cd ../",
    "system-test": "mocha build/system-test --timeout 600000",
    "test": "c8 mocha --timeout=5000 build/test"
  },
  "types": "./build/src/index.d.ts",
  "version": "4.2.1"
}
